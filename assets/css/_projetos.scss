
.capa-projetos {
    display: flex;
    justify-content: start;
    align-items: end;
    padding: 20px;
    width: 100%;
    height: 95vh;
    background-size: cover;
    background-position: center center;
    background-repeat: no-repeat;
    background-image: var(--bg-image-url, none);

    h1 {
        font-size: 2em;
        padding: 0px;
    }

}


/* --- Container do Grid: .grade-projeto --- */
.grid-projeto {
    display: grid;
    /*
     * Define as colunas do grid. A chave para o sangramento está aqui.
     *
     * `[area-sangra-start]` e `[area-sangra-end]` são linhas nomeadas que representam as bordas da tela.
     * `calc(-1 * var(--padding-secao, 20px))` compensa o padding da .secao-projeto,
     * fazendo com que o grid comece e termine *fora* desse padding.
     *
     * `[conteudo-grid-start]` e `[conteudo-grid-end]` são as linhas que definem a área das 12 colunas normais.
     */
    grid-template-columns: [area-sangra-start] calc(-1 * var(--padding-secao, 20px)) [conteudo-grid-start] repeat(12, 1fr) [conteudo-grid-end] calc(-1 * var(--padding-secao, 20px)) [area-sangra-end];

    gap: 20px; /* Espaçamento padrão entre as colunas e linhas internas do grid */
    max-width: none; /* Permite que a grade se estenda para a largura total do contêiner pai */
    margin: 0; /* Remove margens padrão que poderiam impedir o sangramento */

    /* Variável CSS para o padding da seção, fácil de ajustar */
    --padding-secao: 20px;

    .descricao {

        grid-template-columns: 1fr 1fr;
        .grid {
text-align: left;
padding-left: 20px;
        }

        p {padding-right: 20px;}
        
    }
}

/* --- Estilo Padrão para Itens do Projeto --- */
.item-projeto {
    /* Por padrão, um item comum vai ocupar todas as 12 colunas dentro da área de conteúdo normal */
    grid-column: conteudo-grid-start / conteudo-grid-end;
    /* Adicione estilos de base para seus itens aqui (ex: background, padding interno, etc.) */
    padding: 15px; /* Padding interno para o conteúdo de cada item */
    background-color: #ffffff; /* Fundo branco para os itens normais */
}

/* --- Classes de LARGURA (Column Spanning) --- */
/*
   Essas classes fazem o elemento ocupar 'X' número de colunas.
   Elas são aplicadas DENTRO da área `[conteudo-grid-start] / [conteudo-grid-end]`.
   Ex: <div class="item-projeto col-6">...</div>
*/
.col-1 { grid-column: span 1; }
.col-2 { grid-column: span 2; }
.col-3 { grid-column: span 3; }
.col-4 { grid-column: span 4; }
.col-5 { grid-column: span 5; }
.col-6 { grid-column: span 6; }
.col-7 { grid-column: span 7; }
.col-8 { grid-column: span 8; }
.col-9 { grid-column: span 9; }
.col-10 { grid-column: span 10; }
.col-11 { grid-column: span 11; }
.col-12 { grid-column: span 12; }

/* --- Classes Combinadas: INÍCIO E LARGURA (start-col-Y-span-X) --- */
/*
   Estas são as classes mais poderosas para posicionamento preciso.
   Elas definem onde o item COMEÇA (coluna Y) e quantas colunas ele OCUPA (span X).
   A sintaxe é `grid-column: [coluna-inicial] / span [numero-de-colunas];`
   Ex: <div class="item-projeto start-col-3-span-8">...</div>
*/
/* Combinações para Start Column 1 */
.start-col-1-span-1 { grid-column: 1 / span 1; }
.start-col-1-span-2 { grid-column: 1 / span 2; }
.start-col-1-span-3 { grid-column: 1 / span 3; }
.start-col-1-span-4 { grid-column: 1 / span 4; }
.start-col-1-span-5 { grid-column: 1 / span 5; }
.start-col-1-span-6 { grid-column: 1 / span 6; }
.start-col-1-span-7 { grid-column: 1 / span 7; }
.start-col-1-span-8 { grid-column: 1 / span 8; }
.start-col-1-span-9 { grid-column: 1 / span 9; }
.start-col-1-span-10 { grid-column: 1 / span 10; }
.start-col-1-span-11 { grid-column: 1 / span 11; }
.start-col-1-span-12 { grid-column: 1 / span 12; }

/* Combinações para Start Column 2 */
.start-col-2-span-1 { grid-column: 2 / span 1; }
.start-col-2-span-2 { grid-column: 2 / span 2; }
.start-col-2-span-3 { grid-column: 2 / span 3; }
.start-col-2-span-4 { grid-column: 2 / span 4; }
.start-col-2-span-5 { grid-column: 2 / span 5; }
.start-col-2-span-6 { grid-column: 2 / span 6; }
.start-col-2-span-7 { grid-column: 2 / span 7; }
.start-col-2-span-8 { grid-column: 2 / span 8; }
.start-col-2-span-9 { grid-column: 2 / span 9; }
.start-col-2-span-10 { grid-column: 2 / span 10; }
.start-col-2-span-11 { grid-column: 2 / span 11; }
.start-col-2-span-12 { grid-column: 2 / span 12; }

/* Combinações para Start Column 3 */
.start-col-3-span-1 { grid-column: 3 / span 1; }
.start-col-3-span-2 { grid-column: 3 / span 2; }
.start-col-3-span-3 { grid-column: 3 / span 3; }
.start-col-3-span-4 { grid-column: 3 / span 4; }
.start-col-3-span-5 { grid-column: 3 / span 5; }
.start-col-3-span-6 { grid-column: 3 / span 6; }
.start-col-3-span-7 { grid-column: 3 / span 7; }
.start-col-3-span-8 { grid-column: 3 / span 8; } 
.start-col-3-span-9 { grid-column: 3 / span 9; }
.start-col-3-span-10 { grid-column: 3 / span 10; }
.start-col-3-span-11 { grid-column: 3 / span 11; }
.start-col-3-span-12 { grid-column: 3 / span 12; }

/* Combinações para Start Column 4 */
.start-col-4-span-1 { grid-column: 4 / span 1; }
.start-col-4-span-2 { grid-column: 4 / span 2; }
.start-col-4-span-3 { grid-column: 4 / span 3; }
.start-col-4-span-4 { grid-column: 4 / span 4; }
.start-col-4-span-5 { grid-column: 4 / span 5; }
.start-col-4-span-6 { grid-column: 4 / span 6; }
.start-col-4-span-7 { grid-column: 4 / span 7; }
.start-col-4-span-8 { grid-column: 4 / span 8; } 
.start-col-4-span-9 { grid-column: 4 / span 9; }
.start-col-4-span-10 { grid-column: 4 / span 10; }
.start-col-4-span-11 { grid-column: 4 / span 11; }
.start-col-4-span-12 { grid-column: 4 / span 12; }

/* Combinações para Start Column 5 */
.start-col-5-span-1 { grid-column: 5 / span 1; }
.start-col-5-span-2 { grid-column: 5 / span 2; }
.start-col-5-span-3 { grid-column: 5 / span 3; }
.start-col-5-span-4 { grid-column: 5 / span 4; }
.start-col-5-span-5 { grid-column: 5 / span 5; }
.start-col-5-span-6 { grid-column: 5 / span 6; }
.start-col-5-span-7 { grid-column: 5 / span 7; }
.start-col-5-span-8 { grid-column: 5 / span 8; } 
.start-col-5-span-9 { grid-column: 5 / span 9; }
.start-col-5-span-10 { grid-column: 5 / span 10; }
.start-col-5-span-11 { grid-column: 5 / span 11; }
.start-col-5-span-12 { grid-column: 5 / span 12; }

/* ... (Continue criando as combinações para Start Columns 4 a 12, conforme sua necessidade) ... */
/* Apenas crie as que você realmente planeja usar para não inchar seu CSS. */


/* --- Classe para Elementos que "SANGRARÃO" (Burlando o Padding da Section) --- */
.sangra-secao {
    /* Ocupa da linha externa de início até a linha externa de fim */
    grid-column: area-sangra-start / area-sangra-end;
    /* Remove o padding interno do .item-projeto para este caso */
    padding: 0;
    border-radius: 0; /* Remove borda arredondada se sangrar */
    box-shadow: none; /* Remove sombra se sangrar */
    background-color: transparent; /* Remove fundo branco */
}

/* --- Estilos para Imagens e Vídeos --- */
/* Para imagens dentro de qualquer .item-projeto */
.item-projeto img {
    max-width: 100%;
    height: auto;
    display: block;
    object-fit: cover; /* Faz a imagem cobrir o espaço disponível */
    border-radius: inherit; /* Herda a borda do pai, ou 0 para .sangra-secao */
    min-height: 200px; /* Altura mínima para o object-fit ter efeito */
}

/* Contêiner de Vídeo Responsivo (para manter proporção 16:9) */
.video-container {
    position: relative;
    width: 100%;
    padding-bottom: 56.25%; /* Para proporção 16:9 */
    height: 0;
    overflow: hidden;
    background-color: #000;
}

.video-container iframe,
.video-container video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 0;
}

/* --- Media Queries para Responsividade (Mobile First) --- */
@media (max-width: $tablet) {
    /* Ajusta o padding da section para mobile */
    .secao-projeto {
        padding: 15px; /* Menor padding para telas pequenas */
    }

    /* Redefine o grid principal para 1 coluna em mobile */
    .grade-projeto {
        grid-template-columns: 1fr; /* Uma única coluna */
        gap: 15px; /* Ajusta o gap */
        /* Remove a lógica de colunas nomeadas negativas para mobile, pois não será usada */
    }

    /* Reset de todos os itens do grid para ocuparem a largura total em mobile */
    .item-projeto,
    .col-1, .col-2, .col-3, .col-4, .col-5, .col-6,
    .col-7, .col-8, .col-9, .col-10, .col-11, .col-12,
    .start-col-1-span-1, .start-col-1-span-2, /* ... todas as start-col-Y-span-X ... */
    .sangra-secao {
        grid-column: 1 / span 1; /* Todos ocupam 1 coluna */
        padding: 15px; /* Padding interno para itens em mobile */
        border-radius: 8px; /* Mantém borda arredondada em mobile */
        box-shadow: 0 2px 5px rgba(0,0,0,0.1); /* Mantém sombra em mobile */
        background-color: #ffffff; /* Fundo branco em mobile */
    }

    /* Exceção: itens de imagem/vídeo que sangram não precisam de padding interno em mobile */
    .sangra-secao img,
    .sangra-secao .video-container {
        padding: 0;
        border-radius: 0;
        box-shadow: none;
    }

    .item-projeto img {
        min-height: 150px; /* Ajusta altura mínima da imagem para mobile */
    }
}

.borda {
                border-radius: 20px;
            }

figcaption {
                font-size: 0.8em;
                font-style: italic;
                font-weight: 300;
                margin-top: 10px;
            }

// PAGINAÇÃO 
.paginacao {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    width: 100%;
    min-height: 250px;
    margin-top: 100px;
    gap: 20px;
    padding: 0px 20px;
    

    .veja-mais {
        background-color: $cinza-medio-claro;
        border-radius: 20px;
        padding: 20px;
        color: $branco;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        cursor: pointer;
    

    &:hover {
        transition: 0.3s;
                transform: translateY(-8px);
    }
}

    .sobre-mim {
        background-color: $cinza;
        border-radius: 20px;
        padding: 20px;
        color: $branco;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        cursor: pointer;
    

    &:hover {
        transition: 0.3s;
                transform: translateY(-8px);
    }
    }

    h3 {font-size: 1.2em;
        font-weight: 400;
        padding: 0;
    }

    h1 {font-size: 1.5em;
        padding: 0;
    }
}